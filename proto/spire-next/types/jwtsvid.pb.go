// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jwtsvid.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// JWT SPIFFE Verifiable Identity Document. It contains the raw JWT token
// as well as a few denormalized fields for convenience.
type JWTSVID struct {
	// The serialized JWT token.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// The SPIFFE ID of the JWT-SVID.
	Id *SPIFFEID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Expiration timestamp (seconds since Unix epoch).
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Issuance timestamp (seconds since Unix epoch).
	IssuedAt             int64    `protobuf:"varint,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTSVID) Reset()         { *m = JWTSVID{} }
func (m *JWTSVID) String() string { return proto.CompactTextString(m) }
func (*JWTSVID) ProtoMessage()    {}
func (*JWTSVID) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e2d2b91d3020e51, []int{0}
}

func (m *JWTSVID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTSVID.Unmarshal(m, b)
}
func (m *JWTSVID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTSVID.Marshal(b, m, deterministic)
}
func (m *JWTSVID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTSVID.Merge(m, src)
}
func (m *JWTSVID) XXX_Size() int {
	return xxx_messageInfo_JWTSVID.Size(m)
}
func (m *JWTSVID) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTSVID.DiscardUnknown(m)
}

var xxx_messageInfo_JWTSVID proto.InternalMessageInfo

func (m *JWTSVID) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *JWTSVID) GetId() *SPIFFEID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *JWTSVID) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *JWTSVID) GetIssuedAt() int64 {
	if m != nil {
		return m.IssuedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*JWTSVID)(nil), "spire.types.JWTSVID")
}

func init() { proto.RegisterFile("jwtsvid.proto", fileDescriptor_6e2d2b91d3020e51) }

var fileDescriptor_6e2d2b91d3020e51 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x2a, 0x2f, 0x29,
	0x2e, 0xcb, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2e, 0x2e, 0xc8, 0x2c, 0x4a,
	0xd5, 0x2b, 0xa9, 0x2c, 0x48, 0x2d, 0x96, 0x92, 0x07, 0x73, 0x74, 0xf3, 0x52, 0x2b, 0x4a, 0xf4,
	0xc1, 0x22, 0xfa, 0xc5, 0x05, 0x99, 0x69, 0x69, 0xa9, 0x30, 0xd5, 0x4a, 0x4d, 0x8c, 0x5c, 0xec,
	0x5e, 0xe1, 0x21, 0xc1, 0x61, 0x9e, 0x2e, 0x42, 0x22, 0x5c, 0xac, 0x25, 0xf9, 0xd9, 0xa9, 0x79,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x90, 0x2a, 0x17, 0x53, 0x66, 0x8a, 0x04,
	0x93, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0xa8, 0x1e, 0x92, 0xe1, 0x7a, 0xc1, 0x01, 0x9e, 0x6e, 0x6e,
	0xae, 0x9e, 0x2e, 0x41, 0x4c, 0x99, 0x29, 0x42, 0xb2, 0x5c, 0x5c, 0xa9, 0x15, 0x20, 0xc9, 0xe2,
	0xf8, 0xc4, 0x12, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x4e, 0xa8, 0x88, 0x63, 0x89, 0x90,
	0x34, 0x17, 0x67, 0x66, 0x71, 0x71, 0x69, 0x6a, 0x0a, 0x48, 0x96, 0x05, 0x2c, 0xcb, 0x01, 0x11,
	0x70, 0x2c, 0x71, 0x32, 0x88, 0xd2, 0x4b, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf,
	0x85, 0xba, 0x50, 0x1f, 0x6c, 0x93, 0x3e, 0xd8, 0x95, 0xfa, 0xe8, 0xbe, 0x48, 0x62, 0x03, 0x8b,
	0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xef, 0x5f, 0xf9, 0xfc, 0x00, 0x00, 0x00,
}
